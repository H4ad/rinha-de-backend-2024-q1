version: '3'

services:
  db:
    image: postgres:16.1
    command: 'postgres -c max_connections=26 -c shared_buffers=128MB -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c checkpoint_timeout=1d -c shared_preload_libraries="pg_stat_statements" -c compute_query_id=on -c pg_stat_statements.max=10000 -c pg_stat_statements.track=all'
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: rinha
      POSTGRES_DB: dev
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U rinha -d dev']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: '0.7'
          memory: '300MB'

  api1:
    build: .
    hostname: api1
    restart: unless-stopped
    ports:
      - '3000:3000'
    healthcheck:
      test: ['CMD-SHELL', 'curl http://localhost:3000/health']
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - DATABASE_URL=postgres://rinha:password@db:5432/dev
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '85MB'

  api2:
    build: .
    hostname: api2
    restart: unless-stopped
    ports:
      - '3001:3000'
    healthcheck:
      test: ['CMD-SHELL', 'curl http://localhost:3000/health']
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - DATABASE_URL=postgres://rinha:password@db:5432/dev
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '85MB'

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./default.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - '9999:9999'
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '80MB'
